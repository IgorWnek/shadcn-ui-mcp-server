STDOUT:
{"result":{"content":[{"type":"text","text":"{\n  \"componentName\": \"bw-button\",\n  \"componentType\": \"ui\",\n  \"success\": true,\n  \"metadata\": {\n    \"shadcnCompliant\": false,\n    \"framework\": \"React\",\n    \"typescript\": true,\n    \"baseComponent\": \"button\",\n    \"strictMode\": true,\n    \"hasCustomVariants\": true,\n    \"variantCount\": 4,\n    \"validationSummary\": {\n      \"componentName\": \"bw-button\",\n      \"componentType\": \"ui\",\n      \"totalVariants\": 4,\n      \"totalSizes\": 3,\n      \"hasConflicts\": true\n    },\n    \"hasWarnings\": true,\n    \"warningCount\": 1\n  },\n  \"files\": {\n    \"component\": {\n      \"path\": \"apps/v4/registry/new-york-v4/ui/bw-button.tsx\",\n      \"content\": \"import * as React from \\\"react\\\"\\nimport { Slot } from \\\"@radix-ui/react-slot\\\"\\nimport { cva, type VariantProps } from \\\"class-variance-authority\\\"\\nimport { cn } from \\\"@/lib/utils\\\"\\n\\nconst bw-buttonVariants = cva(\\n  \\\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\\"bg-primary text-primary-foreground hover:bg-primary/90\\\",\\n        destructive: \\\"bg-destructive text-destructive-foreground hover:bg-destructive/90\\\",\\n        outline: \\\"border border-input bg-background hover:bg-accent hover:text-accent-foreground\\\",\\n        secondary: \\\"bg-secondary text-secondary-foreground hover:bg-secondary/80\\\",\\n        ghost: \\\"hover:bg-accent hover:text-accent-foreground\\\",\\n        link: \\\"text-primary underline-offset-4 hover:underline\\\",\\n        black: \\\"bg-black text-white hover:bg-black/90\\\",\\n        white: \\\"bg-white text-black border border-black hover:bg-gray-100\\\",\\n        bw-outline: \\\"border-2 border-black bg-transparent text-black hover:bg-black/5\\\",\\n        bw-ghost: \\\"bg-transparent text-black hover:bg-black/5\\\"\\n      },\\n      size: {\\n        default: \\\"h-10 rounded-md px-4 py-2\\\",\\n        sm: \\\"h-9 rounded-md px-3 text-sm\\\",\\n        lg: \\\"h-11 rounded-md px-8 text-lg\\\",\\n        icon: \\\"h-10 w-10\\\",\\n        sm: \\\"h-9 rounded-md px-3 text-sm\\\",\\n        default: \\\"h-10 rounded-md px-4 py-2\\\",\\n        lg: \\\"h-11 rounded-md px-8 text-lg\\\"\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\\"default\\\",\\n      size: \\\"default\\\",\\n    },\\n  }\\n)\\n\\nexport interface BwButtonProps\\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\\n    VariantProps<typeof bw-buttonVariants> {\\n  asChild?: boolean\\n}\\n\\nconst BwButton = React.forwardRef<HTMLButtonElement, BwButtonProps>(\\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\\n    const Comp = asChild ? Slot : \\\"button\\\"\\n    return (\\n      <Comp\\n        className={cn(bw-buttonVariants({ variant, size, className }))}\\n        ref={ref}\\n        {...props}\\n      />\\n    )\\n  }\\n)\\nBwButton.displayName = \\\"BwButton\\\"\\n\\nexport { BwButton, bw-buttonVariants }\",\n      \"size\": 2269,\n      \"type\": \"component\"\n    },\n    \"interface\": {\n      \"path\": \"apps/v4/registry/new-york-v4/types/bw-button-types.ts\",\n      \"content\": \"export interface BwButtonProps\\n  extends React.HTMLAttributes<HTMLDivElement> {\\n  /**\\n   * Change the default rendered element for the one passed as a child, merging their props and behavior.\\n   */\\n  asChild?: boolean\\n  /**\\n   * The visual style variant of the component\\n   */\\n  variant?: \\\"default\\\" | \\\"secondary\\\" | \\\"outline\\\" | \\\"ghost\\\"\\n  /**\\n   * The size of the component\\n   */\\n  size?: \\\"default\\\" | \\\"sm\\\" | \\\"lg\\\"\\n}\",\n      \"size\": 412,\n      \"type\": \"types\"\n    },\n    \"demo\": {\n      \"path\": \"apps/v4/registry/new-york-v4/examples/bw-button-demo.tsx\",\n      \"content\": \"import { BwButton } from \\\"@/registry/new-york-v4/ui/bw-button\\\"\\n\\nexport default function BwButtonDemo() {\\n  return (\\n    <div className=\\\"flex items-center space-x-4\\\">\\n      <BwButton>Default</BwButton>\\n      <BwButton variant=\\\"secondary\\\">Secondary</BwButton>\\n      <BwButton variant=\\\"outline\\\">Outline</BwButton>\\n      <BwButton variant=\\\"ghost\\\">Ghost</BwButton>\\n      <BwButton size=\\\"sm\\\">Small</BwButton>\\n      <BwButton size=\\\"lg\\\">Large</BwButton>\\n    </div>\\n  )\\n}\",\n      \"size\": 462,\n      \"type\": \"demo\"\n    }\n  },\n  \"shadcnPatterns\": {\n    \"forwardRef\": true,\n    \"variantSystem\": true,\n    \"classVarianceAuthority\": true,\n    \"radixSlot\": true,\n    \"cnUtility\": true,\n    \"semanticTokens\": true\n  },\n  \"instructions\": [\n    \"‚úÖ Component \\\"bw-button\\\" generated successfully\",\n    \"üìÅ Component file: apps/v4/registry/new-york-v4/ui/bw-button.tsx\",\n    \"üìÅ Types file: apps/v4/registry/new-york-v4/types/bw-button-types.ts\",\n    \"üìÅ Demo file: apps/v4/registry/new-york-v4/examples/bw-button-demo.tsx\",\n    \"üé® Component type: ui\",\n    \"üîß Based on: button\",\n    \"\",\n    \"üìã Next steps:\",\n    \"1. Create the component file with the generated content\",\n    \"2. Add TypeScript types file for better development experience\",\n    \"3. Update your component registry index file\",\n    \"4. Install required dependencies: @radix-ui/react-slot, class-variance-authority\",\n    \"5. Ensure your utils.ts file includes the cn() utility function\",\n    \"6. Test the component in your application\",\n    \"\",\n    \"üéØ Shadcn/ui compliance features:\",\n    \"üé® Custom variants: black, white, bw-outline, bw-ghost\",\n    \"‚Ä¢ ‚úÖ Uses React.forwardRef for ref forwarding\",\n    \"‚Ä¢ ‚úÖ Implements asChild prop for composition\",\n    \"‚Ä¢ ‚úÖ Uses CVA (Class Variance Authority) for variants\",\n    \"‚Ä¢ ‚úÖ Includes cn() utility for class merging\",\n    \"‚Ä¢ ‚úÖ Follows semantic design token patterns\",\n    \"‚Ä¢ ‚úÖ TypeScript ready with proper prop interfaces\"\n  ]\n}"}]},"jsonrpc":"2.0","id":1}


STDERR:
INFO: Starting Shadcn UI MCP Server...
INFO: Using default framework: 'react'
INFO: Using default framework: 'react'
INFO: MCP Server configured for REACT framework
INFO: Repository: YashTellis/ui
INFO: File extension: .tsx
INFO: Description: React components from YashTellis/ui v4
INFO: To switch frameworks: set FRAMEWORK=svelte|vue or use --framework svelte|vue
INFO: Using default framework: 'react'
WARN: No GitHub API key provided. Rate limited to 60 requests/hour.
INFO: Setting up request handlers...
INFO: Handlers setup complete
INFO: Transport initialized: stdio
INFO: Server started successfully
INFO: Creating shadcn/ui component: bw-button (type: ui) with strict validation
WARN: Shadcn/ui Pattern Warning: Custom sizes [sm, default, lg] already exist as default sizes
INFO: Using default framework: 'react'
INFO: Generating shadcn/ui component: bw-button (type: ui)
INFO: Validated base component: button
INFO: Using button as base component reference
INFO: Successfully generated shadcn/ui compliant component: bw-button
INFO: Component compliance: TypeScript ‚úÖ, forwardRef ‚úÖ, CVA variants ‚úÖ, Radix Slot ‚úÖ
